{"remainingRequest":"/Users/liuxieric123/Desktop/blockchain/nft_move_starcoin/dev/dapp/front-end/nft/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/liuxieric123/Desktop/blockchain/nft_move_starcoin/dev/dapp/front-end/nft/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/liuxieric123/Desktop/blockchain/nft_move_starcoin/dev/dapp/front-end/nft/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liuxieric123/Desktop/blockchain/nft_move_starcoin/dev/dapp/front-end/nft/src/views/Main.vue?vue&type=template&id=c1f1971a&scoped=true&","dependencies":[{"path":"/Users/liuxieric123/Desktop/blockchain/nft_move_starcoin/dev/dapp/front-end/nft/src/views/Main.vue","mtime":1627671868381},{"path":"/Users/liuxieric123/Desktop/blockchain/nft_move_starcoin/dev/dapp/front-end/nft/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liuxieric123/Desktop/blockchain/nft_move_starcoin/dev/dapp/front-end/nft/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/liuxieric123/Desktop/blockchain/nft_move_starcoin/dev/dapp/front-end/nft/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liuxieric123/Desktop/blockchain/nft_move_starcoin/dev/dapp/front-end/nft/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}