{"version":3,"file":"read-bigint-64-be.js","sourceRoot":"","sources":["../src/read-bigint-64-be.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,eAAe,EAAE,MAAM,UAAU,CAAC;AAE3C,+EAA+E;AAC/E,MAAM,UAAU,cAAc,CAAC,MAAc,EAAE,MAAM,GAAG,CAAC;IACrD,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,eAAe,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IAExD,MAAM,GAAG,GACL,CAAC,KAAK,IAAI,EAAE,CAAC,GAAG,WAAW;QAC3B,MAAM,CAAC,EAAE,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE;QAC1B,MAAM,CAAC,EAAE,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC;QACzB,MAAM,CAAC,EAAE,MAAM,CAAC,CAAC;IACrB,OAAO,CACH,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,EAAE,CAAC,CAAC;QAC3B,MAAM,CACF,MAAM,CAAC,EAAE,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE;YACtB,MAAM,CAAC,EAAE,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE;YAC1B,MAAM,CAAC,EAAE,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC;YACzB,IAAI,CACX,CACJ,CAAC;AACN,CAAC","sourcesContent":["import { getFirstAndLast } from \"./common\";\n\n// https://github.com/nodejs/node/blob/v13.9.0/lib/internal/buffer.js#L141-L157\nexport function readBigInt64BE(buffer: Buffer, offset = 0): bigint {\n    const { first, last } = getFirstAndLast(buffer, offset);\n\n    const val =\n        (first << 24) + // Overflow\n        buffer[++offset] * 2 ** 16 +\n        buffer[++offset] * 2 ** 8 +\n        buffer[++offset];\n    return (\n        (BigInt(val) << BigInt(32)) +\n        BigInt(\n            buffer[++offset] * 2 ** 24 +\n                buffer[++offset] * 2 ** 16 +\n                buffer[++offset] * 2 ** 8 +\n                last,\n        )\n    );\n}\n"]}